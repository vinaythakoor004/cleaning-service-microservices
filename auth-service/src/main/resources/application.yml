spring:
  application:
    name: auth-service

  datasource:
    url: jdbc:postgresql://postgres:5432/booking_db #jdbc:postgresql://postgres:5432/booking_db
    username: ${DB_USERNAME} #"postgres" #for docker
    password: ${DB_PASSWORD} #"1234"  #for docker
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: true
        
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:8083/login/oauth2/code/google #"{baseUrl}/login/oauth2/code/google"
            scope:
              - email
              - profile
        provider:
          google:
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka
server:
  port: 8083
logging:
  level:
    com.cleaningApp.booking_service: DEBUG
    org.springframework.boot.autoconfigure.jdbc: DEBUG # Show details about JDBC auto-configuration
    com.zaxxer.hikari: DEBUG # Show HikariCP connection pool details, including the URL
    org.springframework.jdbc.datasource: DEBUG # For more generic JDBC datasource logging
    org.hibernate.engine.jdbc.connections.internal: DEBUG # Detailed Hibernate connection logs

jwt:
  secret: ${JWT_SECRET}
