server:
  port: 8081

spring:
  application:
    name: booking-service

  datasource:
    url: jdbc:postgresql://postgres:5432/booking_db
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: true

  cloud:
    stream:
      bindings:
        # Define an output binding named 'bookingEvents-out-0'
        # This name should match the one used in BookingService.java (streamBridge.send("bookingEvents-out-0", ...))
        bookingEvents-out-0:
          destination: booking-topic # The Kafka topic where booking events will be sent
          contentType: application/json
    kafka:
      binder:
        # brokers: kafka:9092 # Address of your Kafka broker

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka
logging:
  level:
    com.cleaningApp.booking_service: DEBUG
    org.springframework.boot.autoconfigure.jdbc: DEBUG # Show details about JDBC auto-configuration
    com.zaxxer.hikari: DEBUG # Show HikariCP connection pool details, including the URL
    org.springframework.jdbc.datasource: DEBUG # For more generic JDBC datasource logging
    org.hibernate.engine.jdbc.connections.internal: DEBUG # Detailed Hibernate connection logs